<%
  var data = pageData.data || [];
%>

<% include ../_utils/header %>

<style type="text/css">
  .count-bar {
    margin-bottom: 5px !important;
  }
  .count-bar > .progress-bar {
    text-align  : left !important;
    padding-left: 5px;
  }
</style>

<div class="col-xs-10 col-xs-offset-1">
  <div class="col-xs-12">
    <div class="panel panel-default">
      <div class="panel-body wat-panel-heading">
        <div class="col-xs-3 text-left">
          <span class="wat-panel-title"><i class="fa fa-fw fa-cubes"></i> <%= __('Nodes Stats') %></span>
        </div>
        <div class="col-xs-9 text-right">
        </div>
      </div>
      <div class="table-responsive">
        <table class="table table-hover wat-td-middle">
          <thead>
            <tr>
              <th class="col-xs-4"><%= __('Node') %></th>
              <th class="col-xs-5 text-center"><%= __('Main Task Stats') %></th>
              <th class="col-xs-3 text-right"><%= __('Main/Internal/Result/TOTAL Task Count') %></th>
            </tr>
          </thead>
          <tbody class="wat-mono">
            <% if (toolkit.isNothing(data)) { %>
            <tr>
              <td colspan="100%">
                <h4 class="text-danger text-center"><i class="fa fa-fw fa-times"></i> <%= __('Node No Response') %></h4>
              </td>
            </tr>
            <% } %>

            <%
              var globalMaxMainTaskCount = 0;
              var globalMainTaskCountMap = {};
              var globalMainCount        = 0;
              var globalInternalCount    = 0;
              var globalResultCount      = 0;
              var globalTotalCount       = 0;
            %>
            <% data.forEach(function(d) {
                var maxMainTaskCount = 0;
                var mainTaskCountMap = {};
                var mainCount        = 0;
                var internalCount    = 0;
                var resultCount      = 0;
                var totalCount       = 0;
                for (var task in d.total) if (d.total.hasOwnProperty(task)) {
                  var count = d.total[task];
                  if (toolkit.matchWildcard(task, 'Internal.**')) {
                    internalCount       += count;
                    globalInternalCount += count;
                  } else if (toolkit.matchWildcard(task, '*.Result')) {
                    resultCount       += count;
                    globalResultCount += count;
                  } else {
                    mainTaskCountMap[task] = mainTaskCountMap[task] || 0;
                    mainTaskCountMap[task] += count;
                    mainCount              += count;

                    globalMainTaskCountMap[task] = globalMainTaskCountMap[task] || 0;
                    globalMainTaskCountMap[task] += count;
                    globalMainCount              += count;

                    if (mainTaskCountMap[task] > maxMainTaskCount) {
                      maxMainTaskCount = mainTaskCountMap[task];
                    }
                    if (globalMainTaskCountMap[task] > globalMaxMainTaskCount) {
                      globalMaxMainTaskCount = globalMainTaskCountMap[task];
                    }
                  }

                  totalCount       += count;
                  globalTotalCount += count;
                }

                var mainTaskCounts = [];
                for (var task in mainTaskCountMap) if (mainTaskCountMap.hasOwnProperty(task)) {
                  mainTaskCounts.push({
                    task : task,
                    count: mainTaskCountMap[task],
                  });
                };
                mainTaskCounts.sort(function(a, b) {
                  return b.count - a.count;
                });
            %>
            <tr>
              <td class="wat-force-wrap">
                <strong><i class="fa fa-fw fa-cube"></i><%= d.node %></strong><br />
                Broker: <%= toolkit.strf('{0}://***@{1}:{2}/{3}', d.broker.transport, d.broker.hostname, d.broker.port, d.broker.virtual_host) %><br />
                <%= __('Pre-fetch Task Count') %>: <%= d.prefetch_count %><br />
                <%= __('Current/Max Thread Count') %>: <%= d.pool.processes.length %> / <%= d.pool['max-concurrency'] %><br />
              </td>
              <td>
                <% mainTaskCounts.forEach(function(mainTaskCount) { %>
                  <%= mainTaskCount.task %>
                  <div class="progress count-bar">
                    <div class="progress-bar progress-bar-info wat-big-text" style="width: <%= mainTaskCount.count / maxMainTaskCount * 100 %>%;">
                      <strong><%= mainTaskCount.count %></strong>
                    </div>
                  </div>
                <% }) %>
              </td>
              <td class="text-right wat-nowrap"><%= mainCount %> / <%= internalCount %> / <%= resultCount %> / <strong class="wat-big-text"><%= totalCount %></strong></td>
            </tr>
            <% }) %>

            <% if (!toolkit.isNothing(data)) { %>
            <tr class="warning">
              <td>
                <strong><%= __('All Nodes') %></strong>
              </td>
              <td>
                <% for (var task in globalMainTaskCountMap) if (globalMainTaskCountMap.hasOwnProperty(task)) { %>
                  <%= task %>
                  <div class="progress count-bar">
                    <div class="progress-bar progress-bar-info wat-big-text" style="width: <%= globalMainTaskCountMap[task] / globalMaxMainTaskCount * 100 %>%;">
                      <strong><%= globalMainTaskCountMap[task] %></strong>
                    </div>
                  </div>
                <% } %>
              </td>
              <td class="text-right wat-nowrap"><%= globalMainCount %> / <%= globalInternalCount %> / <%= globalResultCount %> / <strong class="big-number"><%= globalTotalCount %></strong></td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<% include ../_utils/footer %>
